{{- if .Values.rabbitmqAutoscaling.enabled }}
---
apiVersion: keda.sh/v1alpha1
kind: TriggerAuthentication
metadata:
  name: "{{ $.Release.Name }}-keda-auth-rabbitmq"
  namespace: "{{ $.Values.namespace }}"
spec:
  env:
    - parameter: host
      name: BROKER_URL
{{- end }}

{{- if .Values.rabbitmqAutoscaling.enabled }}
{{- range $deployment := .Values.deployments }}
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: "{{ $.Release.Name }}-rabbitmq-{{ .name }}"
  namespace: "{{ $.Values.namespace }}"
spec:
  scaleTargetRef:
    name: "{{ $.Release.Name }}-{{ .name }}"
  {{- $minReplicaCount := $deployment.minReplicaCount | default 1 }}
  minReplicaCount: {{ $minReplicaCount }}
  maxReplicaCount: {{ $deployment.maxReplicaCount | default (add $minReplicaCount 2) }}
  pollingInterval: 3
  cooldownPeriod: 1200
  triggers:
    {{- if $deployment.queueNames }}
    {{- range $queueName := $deployment.queueNames }}
    - type: rabbitmq
      metadata:
        protocol: amqp
        queueName: "{{ $queueName }}"
        mode: QueueLength
        value: "{{ $deployment.queueLength | default $.Values.rabbitmqAutoscaling.defaultQueueLength }}"
      authenticationRef:
        name: "{{ $.Release.Name }}-keda-auth-rabbitmq"
    {{- end }}
    {{- else }}
    {{- $queuePrefix := get $deployment.env "QUEUE_PREFIX" | default "gooey-gpu" }}
    {{- range $queueNameVar := $.Values.rabbitmqAutoscaling.queueNameVars }}
    {{- range $queue := regexSplit "\n" (get $deployment.env $queueNameVar | default "") -1 | compact }}
    {{- $queueName := printf "%s/%s" $queuePrefix $queue }}
    - type: rabbitmq
      metadata:
        protocol: amqp
        queueName: "{{ $queueName }}"
        mode: QueueLength
        value: "{{ $deployment.queueLength | default $.Values.rabbitmqAutoscaling.defaultQueueLength }}"
      authenticationRef:
        name: "{{ $.Release.Name }}-keda-auth-rabbitmq"
    {{- end }}
    {{- end }}
    {{- end }}
{{- end }}
{{- end }}
