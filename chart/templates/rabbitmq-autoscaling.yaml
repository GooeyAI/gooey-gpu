 {{- if .Values.autoscaling.enabled }}
---
apiVersion: keda.sh/v1alpha1
kind: TriggerAuthentication
metadata:
  name: "{{ $.Release.Name }}-keda-auth-rabbitmq-1"
  namespace: "{{ $.Values.namespace }}"
spec:
  env:
    - parameter: host
      name: BROKER_URL
{{- end }}

{{- if .Values.autoscaling.enabled }}
{{- range $deployment := .Values.deployments }}
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: "{{ $.Release.Name }}-rabbitmq-{{ .name }}"
  namespace: "{{ $.Values.namespace }}"
spec:
  {{- $autoscaling := ($deployment.autoscaling | default dict) }}
  scaleTargetRef:
    name: "{{ $.Release.Name }}-{{ .name }}"
  minReplicaCount: {{ if hasKey $autoscaling "minReplicaCount" }}{{ $autoscaling.minReplicaCount }}{{ else }}{{ $.Values.autoscaling.minReplicaCount }}{{ end }}
  maxReplicaCount: {{ if hasKey $autoscaling "maxReplicaCount" }}{{ $autoscaling.maxReplicaCount }}{{ else }}{{ $.Values.autoscaling.maxReplicaCount }}{{ end }}
  cooldownPeriod: 1200
  triggers:
    {{- $queuePrefix := get $deployment.env "QUEUE_PREFIX" | default "gooey-gpu" }}
    {{- range $queueNameVar := $.Values.autoscaling.queueNameVars }}
    {{- range $queue := regexSplit "\n" (get $deployment.env $queueNameVar | default "") -1 | compact }}
    {{- $queueName := printf "%s/%s" $queuePrefix $queue }}
    - type: rabbitmq
      metadata:
        protocol: amqp
        queueName: "{{ $queueName }}"
        mode: QueueLength
        value: "{{ $autoscaling.queueLength | default $.Values.autoscaling.queueLength }}"
      authenticationRef:
        name: "{{ $.Release.Name }}-keda-auth-rabbitmq-1"
    {{- end }}
    {{- end }}
{{- end }}
{{- end }}
