{{- range .Values.deployments }}
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "{{ $.Release.Name }}-{{ .name }}"
  namespace: "{{ $.Values.namespace }}"
  labels:
    app: "{{ $.Release.Name }}-{{ .name }}"
spec:
  replicas: {{ .minReplicaCount | default 1 }}
  selector:
    matchLabels:
      name: "{{ $.Release.Name }}-{{ .name }}"
  template:
    metadata:
      labels:
        name: "{{ $.Release.Name }}-{{ .name }}"
    spec:
      nodeSelector:
        gpuEnabled: "true"
        gpuType: a100
      tolerations:
        - effect: NoSchedule
          key: kubernetes.azure.com/scalesetpriority
          operator: Equal
          value: spot
      containers:
      - name: "worker"
        image: "{{ .image }}"
        resources:
          {{- if .limits }}
          limits:
            {{- toYaml .limits | nindent 12 }}
          {{- end }}
        env:
          {{- if .env }}
          {{- range $name, $value := .env }}
          - name: "{{ $name }}"
            value: "{{ $value }}"
          {{- end }}
          {{- end }}
          {{- if $.Values.commonEnv}}
          {{- range $name, $value := $.Values.commonEnv }}
          - name: "{{ $name }}"
            value: "{{ $value }}"
          {{- end }}
          {{- end }}
          {{- range $name, $value := .limits }}
          - name: "RESOURCE_LIMITS_{{ $name | upper }}"
            value: "{{ $value }}"
          {{- end }}
        livenessProbe:
          exec:
            command: [ "bash", "-c", "celery inspect ping -d celery@$HOSTNAME" ]
          failureThreshold: 5  # consider it dead after 5 failed attempts (10 mins)
          periodSeconds: 120  # default is quite often and celery uses a lot cpu/ram then. (2 min)
          timeoutSeconds: 20  # default is too low
        startupProbe:
          exec:
            command: ["bash", "-c", "celery inspect ping -d celery@$HOSTNAME"]
          failureThreshold: 20  # consider it dead after 20 failed attempts (20 mins)
          periodSeconds: 60  # default is quite often and celery uses a lot cpu/ram then. (1 min)
          timeoutSeconds: 10  # default is too low
        volumeMounts:
        {{- range tuple "huggingface" "torch" "suno" "gooey-gpu/checkpoints" }}
        - name: "{{ $.Release.Name }}-pvc"
          mountPath: "/root/.cache/{{ . }}"
          subPath: "cache/{{ . }}"
        {{- end }}
      volumes:
      - name: "{{ $.Release.Name }}-pvc"
        persistentVolumeClaim:
          claimName: "{{ $.Release.Name }}-pvc"
{{- end }}
